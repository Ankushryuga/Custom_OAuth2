# Fixed Test OAuth2 App/oauth2-client Backend/src/main/resources/application.yml
server:
  port: 3001

#
# Configuration for the OAuth2 client and target URLs.
#
# These properties allow the backend to dynamically build OAuth2 URLs and
# determine where to redirect users after authentication.  You can override
# them via environment variables (e.g. OAUTH2_CLIENT_ID) or by setting
# alternative values in this file.
oauth2:
  # Identifier used by Spring when constructing the authorization request.  By
  # default this matches the registration ID in the spring.security.oauth2
  # configuration, but you can override it to point to a different client
  # registration without changing code.
  client-id: client-app
  # Base URL of the authorization server.  The AuthController uses this to
  # construct the token and userinfo endpoint URLs rather than hardâ€‘coding
  # http://localhost:9000.
  auth-server-base-uri: http://localhost:9000

frontend:
  # Where to send the user after successful login or logout.  This is read
  # both by the AuthController (when returning token responses) and by
  # SecurityConfig (as the default success URL).
  redirect-uri: http://localhost:3000

spring:
  security:
    oauth2:
      client:
        registration:
          client-app:
            client-id: client-app
            client-secret: client-secret
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid,profile,orders.read,api.read
            client-name: Test Client App

        provider:
          client-app:
            issuer-uri: http://localhost:9000

# CORS configuration
cors:
  allowed-origins: http://localhost:3000
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# Enable debug logging
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG