server:
  port: 8080
#  forward-headers-strategy: ${SERVER_FORWARD_HEADERS:framework}
  forward-headers-strategy: none   # <-- IMPORTANT: stop deriving host/scheme from X-Forwarded-*

spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/oauth_db}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
  redis:
    host: ${SPRING_REDIS_HOST:localhost}
    port: ${SPRING_REDIS_PORT:6379}
  flyway:
    enabled: true
  security:
    oauth2:
      authorizationserver:
        issuer: "http://10.201.240.154:8080"

auth:
  dcr:
    initial-token: ${AUTH_DCR_INITIAL_TOKEN:}
    require-initial-token: ${AUTH_DCR_REQUIRE_INITIAL_TOKEN:true}
  jwks:
    dir: ./data/jwks
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.jdbc.core: DEBUG

# application.yml
AUTH_ISSUER_URI: http://10.201.240.154:8080