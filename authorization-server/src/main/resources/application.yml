#server:
#  port: 9000
#
#spring:
#  datasource:
#    url: jdbc:postgresql://localhost:5432/oauth_db
#    username: postgres
#    password: 1234
#  flyway:
#    locations: classpath:db/migration
#  redis:
#    host: localhost
#    port: 6379
#  security:
#    oauth2:
#      authorizationserver:
#        issuer: http://localhost:9000
#
#management:
#  endpoints:
#    web:
#      exposure:
#        include: health,info
#
#auth:
#  jwks:
#    path: ./data/jwks.json
#  dcr:
#    initial-token: dev-dcr-token-123
#    require-initial-token: true
#
#
#logging:
#  level:
#    org.springframework.security: DEBUG
#    org.springframework.security.oauth2: DEBUG
#    org.springframework.jdbc.core: DEBUG
server:
  port: 9000

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/oauth_db
    username: postgres
    password: 1234
  flyway:
    locations: classpath:db/migration
  redis:
    host: localhost
    port: 6379

auth:
  jwks:
    path: ./data/jwks.json
  token:
    access-min: 10
    refresh-days: 30

  # ðŸ‘‡ Dynamic Client Registration config
  dcr:
    initial-token: dev-dcr-token-123   # token you'll pass in Authorization header
    require-initial-token: true        # true = must include it, false = open registration

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.jdbc.core: DEBUG